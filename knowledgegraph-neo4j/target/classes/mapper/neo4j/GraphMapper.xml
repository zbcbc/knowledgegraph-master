<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.knowledgegraph.neo4j.mapper.GraphMapper">
    
    <resultMap type="Graph" id="GraphResult">
        <result property="graphKey"    column="graph_key"    />
        <result property="graphName"    column="graph_name"    />
        <result property="graphType"    column="graph_type"    />
        <result property="graphRemark"    column="graph_remark"    />
        <result property="graphImgUrl"    column="graph_img_url"    />
        <result property="graphViews"    column="graph_views"    />
        <result property="graphTime"    column="graph_time"    />
        <result property="graphUpdateNumber"    column="graph_update_number"    />
        <result property="createBy"    column="create_by"    />
        <result property="createSign"    column="createSign"    />
        <result property="createName"    column="createName"    />
        <result property="avatar"    column="avatar"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deleteFlag"    column="delete_flag"    />
    </resultMap>

    <sql id="selectGraphVo">
        SELECT
            A.graph_key,
            A.graph_name,
            A.graph_type,
            A.graph_remark,
            A.graph_img_url,
            A.graph_views,
            A.graph_time,
            A.graph_update_number,
            A.create_by,
            A.create_time,
            A.update_by,
            A.update_time,
            A.delete_flag,
            B.avatar,
            B.nick_name AS createName
        FROM
            graph A
            LEFT JOIN sys_user B ON A.create_by = B.user_id
    </sql>

    <select id="selectGraphList" parameterType="Graph" resultMap="GraphResult">
        SELECT
        A.graph_key,
        A.graph_name,
        A.graph_type,
        A.graph_remark,
        A.graph_img_url,
        A.graph_views,
        A.graph_time,
        A.graph_update_number,
        A.create_by,
        A.create_time,
        A.update_by,
        A.update_time,
        A.delete_flag,
        <if test="createKey != null  and createKey != ''"> CASE A.create_by WHEN #{createKey} THEN '1'  ELSE '0' END AS createSign, </if>
        B.avatar,
        B.nick_name AS createName
        FROM
        graph A
        LEFT JOIN sys_user B ON A.create_by = B.user_id
        <where>
            <if test="graphName != null  and graphName != ''"> and A.graph_name like concat('%', #{graphName}, '%')</if>
            <if test="graphType != null  and graphType != ''"> and A.graph_type = #{graphType}</if>
            <if test="createBy != null  and createBy != ''"> and A.create_by = #{createBy}</if>
        </where>
        ORDER BY A.create_time DESC
    </select>

    <select id="getGraphList" parameterType="Graph" resultMap="GraphResult">
        SELECT
        A.graph_key,
        A.graph_name,
        A.graph_type,
        A.graph_remark,
        A.graph_img_url,
        A.graph_views,
        A.graph_time,
        A.graph_update_number,
        A.create_by,
        A.create_time,
        A.update_by,
        A.update_time,
        A.delete_flag,
        <if test="createKey != null  and createKey != ''"> CASE A.create_by WHEN #{createKey} THEN '1'  ELSE '0' END AS createSign, </if>
        B.avatar,
        B.nick_name AS createName
        FROM
        graph_member C
        LEFT JOIN graph A ON A.graph_key = C.graph_key
        LEFT JOIN sys_user B ON A.create_by = B.user_id
        <where>
            <if test="graphName != null  and graphName != ''"> and A.graph_name like concat('%', #{graphName}, '%')</if>
            <if test="graphType != null  and graphType != ''"> and A.graph_type = #{graphType}</if>
            <if test="createBy != null  and createBy != ''"> and C.user_key = #{createBy}</if>
        </where>
        ORDER BY A.create_time DESC
    </select>

    <select id="getCheckGraphUniquens" parameterType="Graph" resultMap="GraphResult">
        <include refid="selectGraphVo"/>
        <where>
            <if test="graphName != null  and graphName != ''"> and A.graph_name = #{graphName}</if>
            <if test="graphKey != null  and graphKey != ''"> and A.graph_key &lt;&gt; #{graphKey}</if>
        </where>
    </select>

    <select id="getListGraphByMember" parameterType="Graph" resultMap="GraphResult">
        SELECT
        B.graph_key,
        B.graph_name,
        B.graph_type,
        B.graph_remark,
        B.graph_img_url,
        B.graph_views,
        B.graph_time,
        B.graph_update_number,
        B.create_by,
        B.create_time,
        B.update_by,
        B.update_time,
        B.delete_flag
        FROM
        graph_member A
        LEFT JOIN graph B ON A.graph_key = B.graph_key
        <where>
            <if test="createBy != null  and createBy != ''"> and A.user_key = #{createBy}</if>
        </where>
        ORDER BY B.create_time DESC
    </select>

    <select id="selectGraphByGraphKey" parameterType="String" resultMap="GraphResult">
        <include refid="selectGraphVo"/>
        where A.graph_key = #{graphKey}
    </select>
    <select id="findIndexGraphKey" parameterType="String" resultType="String">
        SELECT
            graph_key
        FROM graph
        WHERE create_by = '1'
          AND graph_name = #{configValue}
    </select>

    <insert id="insertGraph" parameterType="Graph">
        insert into graph
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="graphKey != null">graph_key,</if>
            <if test="graphName != null">graph_name,</if>
            <if test="graphType != null">graph_type,</if>
            <if test="graphRemark != null">graph_remark,</if>
            <if test="graphImgUrl != null">graph_img_url,</if>
            <if test="graphViews != null">graph_views,</if>
            <if test="graphTime != null">graph_time,</if>
            <if test="graphUpdateNumber != null">graph_update_number,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="deleteFlag != null">delete_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="graphKey != null">#{graphKey},</if>
            <if test="graphName != null">#{graphName},</if>
            <if test="graphType != null">#{graphType},</if>
            <if test="graphRemark != null">#{graphRemark},</if>
            <if test="graphImgUrl != null">#{graphImgUrl},</if>
            <if test="graphViews != null">#{graphViews},</if>
            <if test="graphTime != null">#{graphTime},</if>
            <if test="graphUpdateNumber != null">#{graphUpdateNumber},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="deleteFlag != null">#{deleteFlag},</if>
         </trim>
    </insert>

    <update id="updateGraph" parameterType="Graph">
        update graph
        <trim prefix="SET" suffixOverrides=",">
            <if test="graphName != null">graph_name = #{graphName},</if>
            <if test="graphType != null">graph_type = #{graphType},</if>
            <if test="graphRemark != null">graph_remark = #{graphRemark},</if>
            <if test="graphImgUrl != null">graph_img_url = #{graphImgUrl},</if>
            <if test="graphViews != null">graph_views = #{graphViews},</if>
            <if test="graphTime != null">graph_time = #{graphTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="deleteFlag != null">delete_flag = #{deleteFlag},</if>
            graph_update_number = graph_update_number + 1
        </trim>
        where graph_key = #{graphKey};

        <if test="createBy != null">

            UPDATE graph_member
            SET
            contribution_value = contribution_value + 1
            WHERE user_key = #{createBy}
            AND graph_key = #{graphKey};

        </if>

    </update>

    <update id="updateGraphViews"  parameterType="String">
        update graph
        <trim prefix="SET" suffixOverrides=",">
            graph_views = graph_views + 1
        </trim>
        where graph_key = #{graphKey}
    </update>

    <delete id="deleteGraphByGraphKey" parameterType="String">
        delete from graph where graph_key = #{graphKey}
    </delete>
    <delete id="deleteGraphAllByGraphKey" parameterType="String">
        delete from graph where graph_key = #{graphKey} ;
        delete from graph_member where graph_key = #{graphKey} ;
        delete from graph_node where graph_key = #{graphKey} ;
        DELETE FROM graph_apply WHERE graph_key = #{graphKey};
        DELETE
        FROM
            graph_node_video
        WHERE graph_node_key IN
              (SELECT
                   graph_node_key
               FROM
                   graph_node
               WHERE graph_key = #{graphKey})
    </delete>

    <delete id="deleteGraphByGraphKeys" parameterType="String">
        delete from graph where graph_key in 
        <foreach item="graphKey" collection="array" open="(" separator="," close=")">
            #{graphKey}
        </foreach>
    </delete>
</mapper>