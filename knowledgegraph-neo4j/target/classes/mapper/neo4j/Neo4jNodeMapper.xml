<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.knowledgegraph.neo4j.mapper.Neo4jNodeMapper">

    <resultMap type="GraphNode" id="GraphNodeResult">
        <result property="graphNodeKey"    column="graph_node_key"    />
        <result property="graphKey"    column="graph_key"    />
        <result property="graphNodeId"    column="graph_node_id"    />
        <result property="graphNodeName"    column="graph_node_name"    />
        <result property="graphNodeMyicon"    column="graph_node_myicon"    />
        <result property="graphNodeRemark"    column="graph_node_remark"    />
        <result property="graphNodeUpdate"    column="graph_node_update"    />
        <result property="graphNodeUrl"    column="graph_node_url"    />
        <result property="graphNodeTime"    column="graph_node_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deleteFlag"    column="delete_flag"    />
    </resultMap>

    <sql id="selectGraphNodeVo">
        select graph_node_key, graph_key, graph_node_id, graph_node_name, graph_node_myicon, graph_node_remark, graph_node_update, graph_node_url, graph_node_time, create_by, create_time, update_by, update_time, delete_flag from graph_node
    </sql>

    <select id="selectGraphNodeList" parameterType="GraphNode" resultMap="GraphNodeResult">
        <include refid="selectGraphNodeVo"/>
        <where>
            <if test="graphKey != null  and graphKey != ''"> and graph_key = ${graphKey}</if>
            <if test="graphNodeId != null "> and graph_node_id = ${graphNodeId}</if>
            <if test="graphNodeName != null  and graphNodeName != ''"> and graph_node_name like concat('%', ${graphNodeName}, '%')</if>
        </where>
    </select>

    <select id="selectGraphNodeByGraphNodeKey" parameterType="String" resultMap="GraphNodeResult">
        <include refid="selectGraphNodeVo"/>
        where graph_node_key = ${graphNodeKey}
    </select>

    <select id="insertGraphNode" parameterType="GraphNode" resultType="int">
        CREATE (
          n :${graphKey}
         {
          name :&apos;${graphNodeName}&apos;,
          myicon :&apos;${graphNodeMyicon}&apos;
          }
        ) RETURN id (n)
    </select>

    <update id="updateGraphNode" parameterType="GraphNode">
        MATCH (e:${graphKey})
            where id(e) =  ${graphNodeId}
            SET e.name = &apos;${graphNodeName}&apos;
            RETURN count(*)
    </update>

    <select id="deleteGraphNodeByGraphNodeKey" parameterType="String">
        MATCH (n)
        where id(n) = ${graphNodeId}
        DETACH DELETE n
        return count(*);
    </select>

    <select id="deleteGraphAllByGraphKey" parameterType="String">
        MATCH (n:${graphKey})
            OPTIONAL MATCH (n)-[r]-()
            DELETE n,r
    </select>

    <delete id="deleteGraphNodeByGraphNodeKeys" parameterType="String">
        MATCH (n)
        where id(n) in
        <foreach item="graphNodeId" collection="array" open="[" separator="," close="]">
            ${graphNodeId}
        </foreach>
        DETACH DELETE n
        return count(*);

    </delete>
</mapper>